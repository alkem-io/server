version: '3.7'

volumes:
  alkemio_dev_mariadb:
  alkemio_dev_postgres:
  rabbitmq_data:
    driver: local

networks:
  alkemio_dev_net:

services:
  traefik:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_traefik
    image: traefik:v2.4.9
    restart: always
    ports:
      - 8888:8080
      - 8088:8088
      - 3000:80
      - 3306:3306
      - 5432:5432
      - 8008:8008
      - 5001:5001
      - 4436:4436
      - 4437:4437
      - 1025:1025
      - 5672:5672
      - 15672:15672
      - 6379:6379
    networks:
      - alkemio_dev_net
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - type: bind
        source: ./.build/traefik/
        target: /etc/traefik/

  mariadb:
    container_name: alkemio_dev_mariadb
    image: mariadb:10.7.1
    networks:
      - alkemio_dev_net
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
    restart: always
    ports:
      - 3306
    volumes:
      - alkemio_dev_mariadb:/var/lib/mysql
      - ./.scripts/schema.sql:/bootstrap_scripts/1.sql
    command: --sql_mode="" --default-authentication-plugin=mysql_native_password --init-file /bootstrap_scripts/1.sql

  kratos-migrate:
    container_name: alkemio_dev_kratos_migrate
    image: oryd/kratos:v0.10.1
    depends_on:
      - mariadb
    environment:
      - DSN=mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DATABASE_HOST}:3306)/kratos?max_conns=20&max_idle_conns=4
    restart: on-failure
    networks:
      - alkemio_dev_net
    volumes:
      - type: bind
        source: ./.build/ory/kratos/email-password
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes

  kratos:
    container_name: alkemio_dev_kratos
    image: oryd/kratos:v0.10.1
    depends_on:
      - kratos-migrate
    ports:
      - 4433
      - 4434
    restart: unless-stopped
    environment:
      - DSN=mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DATABASE_HOST}:3306)/kratos?max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    networks:
      - alkemio_dev_net
    volumes:
      - type: bind
        source: ./.build/ory/kratos/email-password
        target: /etc/config/kratos
      - type: bind
        source: ./.build/ory/kratos/courier-templates
        target: /etc/config/kratos/courier-templates
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier

  oathkeeper:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_oathkeeper
    image: oryd/oathkeeper:v0.38.19-beta.1
    restart: always
    depends_on:
      - kratos
    ports:
      - 4455
      - 4456
    environment:
      - LOG_LEVEL=debug
    networks:
      - alkemio_dev_net
    volumes:
      - ./.build/ory/oathkeeper:/etc/config/oathkeeper
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"

  mailslurper:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_kratos_mailslurper
    image: oryd/mailslurper:latest-smtps
    restart: always
    ports:
      - 4436
      - 4437
      - 1025
    networks:
      - alkemio_dev_net

  ipfs:
    container_name: alkemio_dev_ipfs
    image: ipfs/go-ipfs:v0.9.1
    networks:
      - alkemio_dev_net
    restart: always
    ports:
      - 4001
      - 4002
      - 5001
      - 8080
    volumes:
      - /tmp/ipfs-docker-data:/data/ipfs

  synapse:
    container_name: alkemio_dev_synapse
    image: matrixdotorg/synapse:v1.39.0
    depends_on:
      - postgres
    restart: always
    environment:
      - SYNAPSE_NO_TLS=true
      - SYNAPSE_ENABLE_REGISTRATION=true
      - SYNAPSE_HOMESERVER_NAME
      - SYNAPSE_SERVER_URL
      - SYNAPSE_SERVER_SHARED_SECRET
    networks:
      - alkemio_dev_net
    ports:
      - 8008
    volumes:
      - type: bind
        source: ./.build/synapse
        target: /data

  postgres:
    container_name: alkemio_dev_postgres
    image: postgres:12
    networks:
      - alkemio_dev_net
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
    restart: always
    ports:
      - 5432
    volumes:
      - alkemio_dev_postgres:/var/lib/postgresql/data

  synapse-admin:
    container_name: alkemio_dev_synapse_admin
    hostname: synapse-admin
    image: awesometechnologies/synapse-admin:0.8.1
    restart: always
    networks:
      - alkemio_dev_net
    ports:
      - 80

  rabbitmq:
    container_name: alkemio_dev_rabbitmq
    image: rabbitmq:3.9.13-management
    restart: always
    networks:
      - alkemio_dev_net
    ports:
      - 5672
      - 15672
    environment:
      - RABBITMQ_SECURE_PASSWORD=yes
      - RABBITMQ_DEFAULT_USER=alkemio-admin
      - RABBITMQ_DEFAULT_PASS=alkemio!
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/mnesia
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    command:
      [
        'bash',
        '-c',
        'chmod 400 /var/lib/rabbitmq/.erlang.cookie; rabbitmq-server --hostname rmq',
      ]

  notification:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_notifications
    hostname: notifications
    image: alkemio/notifications:v0.5.0
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - LOGGING_CONSOLE_ENABLED
      - LOGGING_LEVEL_CONSOLE
      - EMAIL_SMTP_HOST
      - EMAIL_MULTI_PROVIDER_STRATEGY
      - ENVIRONMENT=dev
      - ALKEMIO_SERVER_ENDPOINT
      - ALKEMIO_WEBCLIENT_ENDPOINT
      - KRATOS_API_PUBLIC_ENDPOINT
      - SERVICE_ACCOUNT_USERNAME
      - SERVICE_ACCOUNT_PASSWORD
      - WAIT_HOSTS=host.docker.internal:4000
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    restart: always
    networks:
      - alkemio_dev_net
    command: sh -c "/wait && npm run start"

  wallet-manager:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_wallet_manager
    hostname: wallet-manager
    image: alkemio/wallet-manager:v0.4.2
    environment:
      - DID_METHOD
      - JOLOCOM_DATABASE_HOST
      - MYSQL_ROOT_PASSWORD
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - LOGGING_CONSOLE_ENABLED
      - LOGGING_LEVEL_CONSOLE
      - ENVIRONMENT=dev
      - WAIT_HOSTS=host.docker.internal:4000
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    restart: always
    networks:
      - alkemio_dev_net
    command: sh -c "/wait && npm run start"

  redis:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_redis
    hostname: redis
    image: redis:7.0.2
    restart: always
    networks:
      - alkemio_dev_net
    ports:
      - 6379
