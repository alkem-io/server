import { registerEnumType } from '@nestjs/graphql';

export enum RestrictedSpaceNames {
  /* GROUP | Existing routes see UrlPathBase */
  HOME = 'home',
  USER = 'user',
  ADMIN = 'admin',
  VC = 'vc',
  ORGANIZATION = 'organization',
  DOCUMENTATION = 'documentation',
  INNOVATION_LIBRARY = 'innovation-library',
  INNOVATION_PACKS = 'innovation-packs',
  INNOVATION_HUBS = 'innovation-hubs',
  FORUM = 'forum',
  SPACE_EXPLORER = 'spaces',
  CONTRIBUTORS_EXPLORER = 'contributors',
  ABOUT = 'about',
  PROFILE = 'profile',
  RESTRICTED = 'restricted',
  DOCS = 'docs',
  CONTACT = 'contact',

  // Flow routes
  CREATE_SPACE = 'create-space',

  // Legacy routes
  LANDING = 'landing', // Legacy route that redirects to Welcome site
  IDENTITY = 'identity', // Legacy route that's not used anymore but is decided to be reserved

  // Reserved routes
  FLOWS = 'flows',

  /* GROUP | Technical concerns */
  ROOT = 'root',
  ROOT_ADMIN = 'root-admin',
  ROOT_USER = 'root-user',
  DASHBOARD = 'dashboard',
  START = 'start',
  LOGIN = 'login',
  LOGOUT = 'logout',
  REGISTER = 'register',
  SETTINGS = 'settings',
  SYSTEM = 'system',
  ERROR = 'error',
  NOT_FOUND = '404',
  SERVER_ERROR = '500',
  HELP = 'help',
  SUPPORT = 'support',
  OFFICIAL_SUPPORT = 'official-support',
  API = 'api',
  FAQ = 'faq',
  CONTACT_US = 'contact-us',
  FEEDBACK = 'feedback',
  TEST = 'test',
  NULL = 'null',
  UNDEFINED = 'undefined',
  GRAPHQL = 'graphql',
  GRAPHQL_API = 'graphql-api',
  WS = 'ws',
  WEBSOCKET = 'websocket',
  SOCKET = 'socket',
  REST = 'rest',

  /* GROUP | Ethical and Security Concerns */
  OFFICIAL = 'official',
  ADMIN_HELP = 'admin-help',
  MODERATOR = 'moderator',
  SUPPORT_TEAM = 'support-team',
  FAKE = 'fake',
  SCAM = 'scam',
  PHISHING = 'phishing',
  REPORT = 'report',
  SECURITY = 'security',
  MALWARE = 'malware',
  HACKER = 'hacker',
  BITCOIN = 'bitcoin',
  CRYPTO = 'crypto',
  MONEY = 'money',
  FREE = 'free',
  GIVEAWAY = 'giveaway',
  AUTH = 'auth',
  OAUTH = 'oauth',
  AUTHENTICATION = 'authentication',
  AUTHORIZATION = 'authorization',
  IDENTITY_VERIFICATION = 'identity-verification',
  CALLBACK = 'callback',
  VALIDATION = 'validation',
  VALIDATE = 'validate',
  CONFIRMATION = 'confirmation',
  CONFIRM = 'confirm',
  VERIFY = 'verify',
  VERIFY_EMAIL = 'verify-email',
  VERIFY_IDENTITY = 'verify-identity',
  VERIFY_PHONE = 'verify-phone',
  VERIFY_ACCOUNT = 'verify-account',
  TOKEN = 'token',
  ACCESS_TOKEN = 'access-token',

  /* GROUP | Legal Concerns */
  TERMS = 'terms',
  PRIVACY = 'privacy',
  TERMS_OF_SERVICE = 'terms-of-service',
  PRIVACY_POLICY = 'privacy-policy',
  COOKIE_POLICY = 'cookie-policy',
  LEGAL_NOTICE = 'legal-notice',
  LEGAL_TERMS = 'legal-terms',
  TERMS_AND_CONDITIONS = 'terms-and-conditions',
  PRIVACY_NOTICE = 'privacy-notice',
  NDA = 'nda',
  EULA = 'eula',
  GDPR = 'gdpr',
  LEGAL = 'legal',
  COOKIE = 'cookie',

  /* GROUP | Alkemio-related */
  ALKEMIO = 'alkemio',
  ALCHEMY = 'alchemy',
  ALKEMIOFOUNDATION = 'alkemiofoundation',
  ALKEMIO_FOUNDATION = 'alkemio-foundation',
  ALKEMIOBV = 'alkemiobv',
  ALKEMIO_BV = 'alkemio-bv',
  CHERRYTWIST = 'cherrytwist',
  CREATE_SUBSPACE = 'create-subspace',
  CREATE_VC = 'create-vc',
  CREATE_USER = 'create-user',
  CREATE_ACCOUNT = 'create-account',
  INNOVATION_PACK = 'innovation-pack',
  INNOVATION_HUB = 'innovation-hub',
  SPACE = 'space',
  SUBSPACE = 'subspace',
  VIRTUALCONTRIBUTOR = 'virtualcontributor',
  VIRTUAL_CONTRIBUTOR = 'virtual-contributor',
  VIRTUAL_CONTRIBUTORS = 'virtual-contributors',
  ORG = 'org',

  /* GROUP | Reserved for Future Platform Use */
  OFFICIAL_FEATURES = 'official-features',
  UPDATES = 'updates',
  ANNOUNCEMENTS = 'announcements',
  NEWS = 'news',
  RELEASES = 'releases',
  FEATURES = 'features',
  GUIDES = 'guides',
  RESOURCES = 'resources',
  WORKSPACE = 'workspace',
  TEAM = 'team',
  PROJECT = 'project',
  INITIATIVE = 'initiative',
  PARTNERS = 'partners',
  COMMUNITY = 'community',
  HUB = 'hub',
  EVENT = 'event',
  EVENTS = 'events',
  OFFICE = 'office',
  TIMELINE = 'timeline',
  CALENDAR = 'calendar',
}

// Register the enum with GraphQL
registerEnumType(RestrictedSpaceNames, {
  name: 'RestrictedSpaceNames', // This will be the name of the enum in the GraphQL schema
  description:
    'List of reserved or restricted space names that cannot be used for new spaces.',
});
