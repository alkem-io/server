import { registerEnumType } from '@nestjs/graphql';

export enum NotificationEvent {
  // Platform notifications
  PLATFORM_FORUM_DISCUSSION_CREATED = 'PLATFORM_FORUM_DISCUSSION_CREATED',
  PLATFORM_FORUM_DISCUSSION_COMMENT = 'PLATFORM_FORUM_DISCUSSION_COMMENT',
  PLATFORM_USER_PROFILE_CREATED = 'PLATFORM_USER_PROFILE_CREATED',
  PLATFORM_USER_PROFILE_CREATED_ADMIN = 'PLATFORM_USER_PROFILE_CREATED_ADMIN',
  PLATFORM_USER_PROFILE_REMOVED = 'PLATFORM_USER_PROFILE_REMOVED',
  PLATFORM_GLOBAL_ROLE_CHANGE = 'PLATFORM_GLOBAL_ROLE_CHANGE',
  PLATFORM_SPACE_CREATED = 'PLATFORM_SPACE_CREATED',

  // Organization notifications
  ORGANIZATION_MESSAGE_SENDER = 'ORGANIZATION_MESSAGE_SENDER',
  ORGANIZATION_MESSAGE_RECIPIENT = 'ORGANIZATION_MESSAGE_RECIPIENT',
  ORGANIZATION_MENTIONED = 'ORGANIZATION_MENTIONED',

  // Space notifications
  SPACE_COMMUNITY_APPLICATION_ADMIN = 'SPACE_COMMUNITY_APPLICATION_ADMIN',
  SPACE_COMMUNITY_APPLICATION_APPLICANT = 'SPACE_COMMUNITY_APPLICATION_APPLICANT',
  SPACE_COMMUNITY_NEW_MEMBER = 'SPACE_COMMUNITY_NEW_MEMBER',
  SPACE_COMMUNITY_NEW_MEMBER_ADMIN = 'SPACE_COMMUNITY_NEW_MEMBER_ADMIN',
  SPACE_COMMUNITY_INVITATION_USER = 'SPACE_COMMUNITY_INVITATION_USER',
  SPACE_COMMUNITY_INVITATION_USER_PLATFORM = 'SPACE_COMMUNITY_INVITATION_USER_PLATFORM',
  SPACE_COMMUNITY_INVITATION_VC = 'SPACE_COMMUNITY_INVITATION_VC',
  SPACE_COMMUNICATION_MESSAGE_RECIPIENT = 'SPACE_COMMUNICATION_MESSAGE_RECIPIENT',
  SPACE_COMMUNICATION_MESSAGE_SENDER = 'SPACE_COMMUNICATION_MESSAGE_SENDER',
  SPACE_COMMUNICATION_UPDATE = 'SPACE_COMMUNICATION_UPDATE',
  SPACE_COMMUNICATION_UPDATE_ADMIN = 'SPACE_COMMUNICATION_UPDATE_ADMIN',
  SPACE_COLLABORATION_POST_CREATED_ADMIN = 'SPACE_COLLABORATION_POST_CREATED_ADMIN',
  SPACE_COLLABORATION_POST_CREATED = 'SPACE_COLLABORATION_POST_CREATED',
  SPACE_COLLABORATION_POST_COMMENT_CREATED = 'SPACE_COLLABORATION_POST_COMMENT_CREATED',
  SPACE_COLLABORATION_WHITEBOARD_CREATED = 'SPACE_COLLABORATION_WHITEBOARD_CREATED',
  SPACE_COLLABORATION_CALLOUT_PUBLISHED = 'SPACE_COLLABORATION_CALLOUT_PUBLISHED',

  // User notifications
  USER_MENTION = 'USER_MENTION',
  USER_MESSAGE_SENDER = 'USER_MESSAGE_SENDER',
  USER_MESSAGE_RECIPIENT = 'USER_MESSAGE_RECIPIENT',
  USER_COMMENT_REPLY = 'USER_COMMENT_REPLY',
}

registerEnumType(NotificationEvent, {
  name: 'NotificationEvent',
});
