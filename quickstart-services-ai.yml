volumes:
  alkemio_dev_mysql:
  alkemio_dev_postgres:
  tmpvolume:
  chroma-data:
  rabbitmq_data:
    driver: local

networks:
  alkemio_dev_net:

services:
  traefik:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_traefik
    image: traefik:v2.9.6
    restart: always
    ports:
      - 8888:8080
      - 8088:8088
      - 3000:80
      - 3306:3306
      - 5432:5432
      - 8008:8008
      - 4436:4436
      - 4437:4437
      - 1025:1025
      - 5672:5672
      - 15672:15672
      - 6379:6379
    networks:
      - alkemio_dev_net
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - type: bind
        source: ./.build/traefik/
        target: /etc/traefik/

  mysql:
    container_name: alkemio_dev_mysql
    image: mysql:8.3.0
    networks:
      - alkemio_dev_net
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
    restart: always
    ports:
      - 3306
    volumes:
      - alkemio_dev_mysql:/var/lib/mysql
      - ./.scripts/schema.sql:/bootstrap_scripts/1.sql
      - ./.scripts/migrations/CSVs:/var/lib/mysql-files/CSVs
      - tmpvolume:/var/lib/mysql-files
    command: --init-file /bootstrap_scripts/1.sql

  kratos-migrate:
    container_name: alkemio_dev_kratos_migrate
    image: oryd/kratos:v1.2.0
    depends_on:
      - mysql
    environment:
      - DSN=mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DATABASE_HOST}:3306)/kratos?max_conns=20&max_idle_conns=4
    restart: on-failure
    networks:
      - alkemio_dev_net
    volumes:
      - type: bind
        source: ./.build/ory/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes

  kratos:
    container_name: alkemio_dev_kratos
    image: oryd/kratos:v1.2.0
    depends_on:
      - kratos-migrate
    ports:
      - 4433
      - 4434
    restart: unless-stopped
    environment:
      - DSN=mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DATABASE_HOST}:3306)/kratos?max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    networks:
      - alkemio_dev_net
    volumes:
      - type: bind
        source: ./.build/ory/kratos
        target: /etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier

  oathkeeper:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_oathkeeper
    image: oryd/oathkeeper:v0.38.19-beta.1
    restart: always
    depends_on:
      - kratos
    ports:
      - 4455
      - 4456
    environment:
      - LOG_LEVEL=debug
    networks:
      - alkemio_dev_net
    volumes:
      - ./.build/ory/oathkeeper:/etc/config/oathkeeper
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"

  mailslurper:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_kratos_mailslurper
    image: oryd/mailslurper:latest-smtps
    restart: always
    ports:
      - 4436
      - 4437
      - 1025
    networks:
      - alkemio_dev_net

  synapse:
    container_name: alkemio_dev_synapse
    image: matrixdotorg/synapse:v1.98.0
    depends_on:
      - postgres
    restart: always
    environment:
      - SYNAPSE_NO_TLS=true
      - SYNAPSE_ENABLE_REGISTRATION=true
      - SYNAPSE_HOMESERVER_NAME
      - SYNAPSE_SERVER_URL
      - SYNAPSE_SERVER_SHARED_SECRET
    networks:
      - alkemio_dev_net
    ports:
      - 8008
    volumes:
      - type: bind
        source: ./.build/synapse
        target: /data

  postgres:
    container_name: alkemio_dev_postgres
    image: postgres:12
    networks:
      - alkemio_dev_net
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
    restart: always
    ports:
      - 5432
    volumes:
      - alkemio_dev_postgres:/var/lib/postgresql/data

  synapse-admin:
    container_name: alkemio_dev_synapse_admin
    hostname: synapse-admin
    image: awesometechnologies/synapse-admin:0.8.1
    restart: always
    networks:
      - alkemio_dev_net
    ports:
      - 80

  rabbitmq:
    container_name: alkemio_dev_rabbitmq
    image: rabbitmq:3.9.13-management
    restart: always
    networks:
      - alkemio_dev_net
    ports:
      - 5672
      - 15672
    environment:
      - RABBITMQ_SECURE_PASSWORD=yes
      - RABBITMQ_DEFAULT_USER=alkemio-admin
      - RABBITMQ_DEFAULT_PASS=alkemio!
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/mnesia
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    command:
      [
        'bash',
        '-c',
        'chmod 400 /var/lib/rabbitmq/.erlang.cookie; rabbitmq-server --hostname rmq',
      ]

  notification:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_notifications
    hostname: notifications
    image: alkemio/notifications:v0.19.0
    platform: linux/x86_64
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - LOGGING_CONSOLE_ENABLED
      - LOGGING_LEVEL_CONSOLE
      - EMAIL_SMTP_HOST
      - EMAIL_MULTI_PROVIDER_STRATEGY
      - ENVIRONMENT=dev
      - ALKEMIO_SERVER_ENDPOINT
      - ALKEMIO_WEBCLIENT_ENDPOINT
      - KRATOS_API_PUBLIC_ENDPOINT
      - SERVICE_ACCOUNT_USERNAME
      - SERVICE_ACCOUNT_PASSWORD
      - WAIT_HOSTS=host.docker.internal:3000
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    restart: always
    networks:
      - alkemio_dev_net
    command: sh -c "/wait && npm run start"

  matrix-adapter:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_matrix_adapter
    hostname: matrix-adapter
    image: alkemio/matrix-adapter:v0.4.5
    platform: linux/x86_64
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - SYNAPSE_HOMESERVER_NAME
      - SYNAPSE_SERVER_URL
      - SYNAPSE_SERVER_SHARED_SECRET
      - SYNAPSE_SERVER_NAME
      - LOGGING_CONSOLE_ENABLED
      - LOGGING_LEVEL_CONSOLE
      - ENVIRONMENT=dev
      - WAIT_HOSTS=host.docker.internal:3000
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    restart: always
    networks:
      - alkemio_dev_net
    command: sh -c "/wait && npm run start"

  redis:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_redis
    hostname: redis
    image: redis:7.0.2
    restart: always
    networks:
      - alkemio_dev_net
    ports:
      - 6379

  whiteboard-collaboration:
    container_name: alkemio_dev_whiteboard_collaboration
    hostname: whiteboard-collaboration
    image: alkemio/whiteboard-collaboration-service:v0.5.0
    platform: linux/x86_64
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - LOGGING_CONSOLE_ENABLED
      - LOGGING_LEVEL_CONSOLE
      - ENVIRONMENT=dev
    restart: always
    networks:
      - alkemio_dev_net
    ports:
      - 4002

  file-service:
    container_name: alkemio_dev_file_service
    hostname: file-service
    image: alkemio/file-service:v0.1.2
    platform: linux/x86_64
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - LOGGING_CONSOLE_ENABLED
      - LOGGING_LEVEL_CONSOLE
      - ENVIRONMENT=dev
      - LOCAL_STORAGE_PATH=storage
    restart: always
    volumes:
      - ../server/.storage:/usr/src/app/storage
    networks:
      - alkemio_dev_net
    ports:
      - 4003

  chromadb:
    image: chromadb/chroma:0.5.0
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_chromadb
    hostname: chromadb
    volumes:
      - chroma-data:/chroma/chroma
    networks:
      - alkemio_dev_net
    ports:
      - 8765:8000

  virtual_contributor_engine_guidance:
    container_name: alkemio_dev_virtual_contributor_engine_guidance
    hostname: virtual-contributor-engine-guidance
    image: alkemio/virtual-contributor-engine-guidance:v0.8.2
    platform: linux/x86_64
    restart: always
    volumes:
      - /dev/shm:/dev/shm
      - ~/alkemio/data:${AI_LOCAL_PATH:-/home/alkemio/data}
    networks:
      - alkemio_dev_net
    depends_on:
      rabbitmq:
        condition: "service_healthy"
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_QUEUE=virtual-contributor-engine-guidance
      - RABBITMQ_EVENT_BUS_EXCHANGE
      - RABBITMQ_RESULT_QUEUE
      - RABBITMQ_RESULT_ROUTING_KEY
      - AZURE_MISTRAL_ENDPOINT
      - AZURE_MISTRAL_API_KEY
      - ENVIRONMENT=dev
      - EMBEDDINGS_DEPLOYMENT_NAME
      - AZURE_OPENAI_API_KEY
      - AZURE_OPENAI_ENDPOINT
      - OPENAI_API_VERSION
      - AI_MODEL_TEMPERATURE
      - AI_SOURCE_WEBSITE
      - AI_SOURCE_WEBSITE2
      - AI_WEBSITE_REPO
      - AI_WEBSITE_REPO2
      - AI_LOCAL_PATH
      - AI_GITHUB_USER
      - AI_GITHUB_PAT
      - LLM_DEPLOYMENT_NAME
      - LANGCHAIN_TRACING_V2
      - LANGCHAIN_ENDPOINT
      - LANGCHAIN_API_KEY
      - LANGCHAIN_PROJECT=virtual-contributor-engine-guidance

  virtual-contributor-engine-community-manager:
    container_name: alkemio_dev_virtual_contributor_engine_community_manager
    hostname: virtual-contributor-engine-community-manager
    image: alkemio/virtual-contributor-engine-community-manager:v0.1.4
    platform: linux/x86_64
    restart: always
    volumes:
      - /dev/shm:/dev/shm
      - ~/alkemio/data:${AI_LOCAL_PATH:-/home/alkemio/data}
    networks:
      - alkemio_dev_net
    depends_on:
      rabbitmq:
        condition: "service_healthy"
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_QUEUE=virtual-contributor-engine-community-manager
      - ENVIRONMENT=dev
      - LOG_LEVEL=DEBUG
      - EMBEDDINGS_DEPLOYMENT_NAME
      - AZURE_OPENAI_API_KEY
      - AZURE_OPENAI_ENDPOINT
      - OPENAI_API_VERSION
      - AI_MODEL_TEMPERATURE
      - AI_LOCAL_PATH
      - LLM_DEPLOYMENT_NAME
      - LANGCHAIN_TRACING_V2
      - LANGCHAIN_ENDPOINT
      - LANGCHAIN_API_KEY
      - LANGCHAIN_PROJECT=virtual-contributor-engine-community-manager

  virtual_contributor_engine_expert:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_virtual_contributor_engine_expert
    hostname: virtual-contributor-engine-expert
    image: alkemio/virtual-contributor-engine-expert:v0.10.0
    platform: linux/x86_64
    restart: always
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - alkemio_dev_net
    depends_on:
      rabbitmq:
        condition: "service_healthy"
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_PORT
      - RABBITMQ_QUEUE=virtual-contributor-engine-expert
      - RABBITMQ_EVENT_BUS_EXCHANGE
      - RABBITMQ_RESULT_QUEUE
      - RABBITMQ_RESULT_ROUTING_KEY
      - AZURE_MISTRAL_ENDPOINT
      - AZURE_MISTRAL_API_KEY
      - API_ENDPOINT_PRIVATE_GRAPHQL=http://host.docker.internal:3000/api/private/non-interactive/graphql
      - AUTH_ORY_KRATOS_PUBLIC_BASE_URL=http://host.docker.internal:3000/ory/kratos/public
      - AUTH_ADMIN_EMAIL
      - AUTH_ADMIN_PASSWORD
      - OPENAI_API_VERSION
      - AI_MODEL_TEMPERATURE
      - LOG_LEVEL=DEBUG
      - AZURE_OPENAI_ENDPOINT=https://alkemio-gpt.openai.azure.com
      - AZURE_OPENAI_API_KEY
      - LLM_DEPLOYMENT_NAME=deploy-gpt-35-turbo
      - EMBEDDINGS_DEPLOYMENT_NAME=embedding
      - LANGCHAIN_TRACING_V2
      - LANGCHAIN_ENDPOINT
      - LANGCHAIN_API_KEY
      - LANGCHAIN_PROJECT=virtual-contributor-engine-expert
      - VECTOR_DB_PORT
      - VECTOR_DB_HOST

  virtual_contributor_ingest_space:
    # the space-ingest service needs to download files from the server running on the host
    # for that to work the container needs to run in network_mode: host and refer to other
    # services trough localhost
    network_mode: host
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_dev_virtual-contributor-ingest-space
    hostname: virtual-contributor-ingest-space
    image: alkemio/virtual-contributor-ingest-space:v0.9.1
    platform: linux/x86_64
    restart: always
    volumes:
       - /dev/shm:/dev/shm
       - ~/alkemio/data:${AI_LOCAL_PATH:-/home/alkemio/data}
    depends_on:
      rabbitmq:
        condition: "service_healthy"
    environment:
      - RABBITMQ_HOST=localhost
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_PORT
      - RABBITMQ_INGEST_BODY_OF_KNOWLEDGE_QUEUE
      - RABBITMQ_INGEST_BODY_OF_KNOWLEDGE_RESULT_QUEUE
      - RABBITMQ_EVENT_BUS_EXCHANGE
      - ENVIRONMENT=dev
      - LOG_LEVEL=debug
      - EMBEDDINGS_DEPLOYMENT_NAME
      - AZURE_OPENAI_API_KEY
      - AZURE_OPENAI_ENDPOINT
      - OPENAI_API_VERSION
      - AI_MODEL_TEMPERATURE
      - AI_LOCAL_PATH
      - LLM_DEPLOYMENT_NAME
      - LANGCHAIN_TRACING_V2
      - LANGCHAIN_ENDPOINT
      - LANGCHAIN_API_KEY
      - LANGCHAIN_PROJECT=virtual-contributor-ingest-space
      - VECTOR_DB_HOST=localhost
      - VECTOR_DB_PORT=8765
      - AUTH_ADMIN_EMAIL
      - AUTH_ADMIN_PASSWORD
      - API_ENDPOINT_PRIVATE_GRAPHQL=http://localhost:3000/api/private/non-interactive/graphql
      - AUTH_ORY_KRATOS_PUBLIC_BASE_URL=http://localhost:3000/ory/kratos/public
      - CHUNK_SIZE=1000
      - CHUNK_OVERLAP=100

  virtual_contributor_engine_generic:
    container_name: alkemio_dev_virtual_contributor_engine_generic
    hostname: virtual-contributor-engine-generic
    image: alkemio/virtual-contributor-engine-generic:v0.4.1
    platform: linux/x86_64
    restart: always
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - alkemio_dev_net
    depends_on:
      rabbitmq:
        condition: "service_healthy"
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_PORT
      - RABBITMQ_QUEUE=virtual-contributor-engine-generic
      - RABBITMQ_EVENT_BUS_EXCHANGE
      - RABBITMQ_RESULT_QUEUE
      - RABBITMQ_RESULT_ROUTING_KEY
      - LOCAL_PATH=./
      - LOG_LEVEL=DEBUG
      - LANGCHAIN_TRACING_V2
      - LANGCHAIN_ENDPOINT
      - LANGCHAIN_API_KEY
      - LANGCHAIN_PROJECT=virtual-contributor-engine-generic
      - HISTORY_LENGTH=20

  virtual_contributor_engine_openai_assistant:
    container_name: alkemio_dev_virtual_contributor_engine_openai_assistant
    hostname: virtual-contributor-engine-openai-assistant
    image: alkemio/virtual-contributor-engine-openai-assistant:v0.2.1
    platform: linux/x86_64
    restart: always
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - alkemio_dev_net
    depends_on:
      rabbitmq:
        condition: "service_healthy"
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_USER
      - RABBITMQ_PASSWORD
      - RABBITMQ_PORT
      - RABBITMQ_QUEUE=virtual-contributor-engine-openai-assistant
      - RABBITMQ_EVENT_BUS_EXCHANGE
      - RABBITMQ_RESULT_QUEUE
      - RABBITMQ_RESULT_ROUTING_KEY
      - LOCAL_PATH=./
      - LOG_LEVEL=DEBUG
